/* tslint:disable */
/* eslint-disable */
/**
 * SPAS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Результат возвращающий идентификатор уведомления
 * @export
 * @interface GetNoticeStatusResult
 */
export interface GetNoticeStatusResult {
    /**
     * статус обработки уведомления
     * @type {number}
     * @memberof GetNoticeStatusResult
     */
    status?: number;
    /**
     * дата обработки уведомления
     * @type {Date}
     * @memberof GetNoticeStatusResult
     */
    statusDate?: Date;
    /**
     * идентификатор ФИАС
     * @type {number}
     * @memberof GetNoticeStatusResult
     */
    objectId?: number | null;
    /**
     * идентификатор ФИАС
     * @type {string}
     * @memberof GetNoticeStatusResult
     */
    objectGuid?: string | null;
    /**
     * код ошибки
     * @type {number}
     * @memberof GetNoticeStatusResult
     */
    errorCode?: number | null;
    /**
     * сообщение об ошибке
     * @type {string}
     * @memberof GetNoticeStatusResult
     */
    errorMessage?: string | null;
    /**
     * Идентификатор запроса
     * @type {string}
     * @memberof GetNoticeStatusResult
     */
    requestId?: string | null;
}

/**
 * Check if a given object implements the GetNoticeStatusResult interface.
 */
export function instanceOfGetNoticeStatusResult(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GetNoticeStatusResultFromJSON(json: any): GetNoticeStatusResult {
    return GetNoticeStatusResultFromJSONTyped(json, false);
}

export function GetNoticeStatusResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetNoticeStatusResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': !exists(json, 'status') ? undefined : json['status'],
        'statusDate': !exists(json, 'status_date') ? undefined : (new Date(json['status_date'])),
        'objectId': !exists(json, 'object_id') ? undefined : json['object_id'],
        'objectGuid': !exists(json, 'object_guid') ? undefined : json['object_guid'],
        'errorCode': !exists(json, 'error_code') ? undefined : json['error_code'],
        'errorMessage': !exists(json, 'error_message') ? undefined : json['error_message'],
        'requestId': !exists(json, 'request_id') ? undefined : json['request_id'],
    };
}

export function GetNoticeStatusResultToJSON(value?: GetNoticeStatusResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': value.status,
        'status_date': value.statusDate === undefined ? undefined : (value.statusDate.toISOString()),
        'object_id': value.objectId,
        'object_guid': value.objectGuid,
        'error_code': value.errorCode,
        'error_message': value.errorMessage,
        'request_id': value.requestId,
    };
}

