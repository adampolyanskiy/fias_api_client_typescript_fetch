/* tslint:disable */
/* eslint-disable */
/**
 * SPAS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AddressLevel } from './AddressLevel';
import {
    AddressLevelFromJSON,
    AddressLevelFromJSONTyped,
    AddressLevelToJSON,
} from './AddressLevel';
import type { AddressObject } from './AddressObject';
import {
    AddressObjectFromJSON,
    AddressObjectFromJSONTyped,
    AddressObjectToJSON,
} from './AddressObject';
import type { EstateObject } from './EstateObject';
import {
    EstateObjectFromJSON,
    EstateObjectFromJSONTyped,
    EstateObjectToJSON,
} from './EstateObject';

/**
 * 
 * @export
 * @interface StructuredAddress
 */
export interface StructuredAddress {
    /**
     * 
     * @type {AddressObject}
     * @memberof StructuredAddress
     */
    region?: AddressObject;
    /**
     * 
     * @type {AddressObject}
     * @memberof StructuredAddress
     */
    district?: AddressObject;
    /**
     * 
     * @type {AddressObject}
     * @memberof StructuredAddress
     */
    citySettlement?: AddressObject;
    /**
     * 
     * @type {AddressObject}
     * @memberof StructuredAddress
     */
    city?: AddressObject;
    /**
     * 
     * @type {AddressObject}
     * @memberof StructuredAddress
     */
    settlement?: AddressObject;
    /**
     * 
     * @type {AddressObject}
     * @memberof StructuredAddress
     */
    street?: AddressObject;
    /**
     * 
     * @type {AddressObject}
     * @memberof StructuredAddress
     */
    planningStructure?: AddressObject;
    /**
     * 
     * @type {EstateObject}
     * @memberof StructuredAddress
     */
    house?: EstateObject;
    /**
     * 
     * @type {EstateObject}
     * @memberof StructuredAddress
     */
    building?: EstateObject;
    /**
     * 
     * @type {EstateObject}
     * @memberof StructuredAddress
     */
    flat?: EstateObject;
    /**
     * 
     * @type {string}
     * @memberof StructuredAddress
     */
    postalCode?: string | null;
    /**
     * 
     * @type {string}
     * @memberof StructuredAddress
     */
    kladrCode?: string | null;
    /**
     * 
     * @type {AddressLevel}
     * @memberof StructuredAddress
     */
    objectLevelId?: AddressLevel;
}

/**
 * Check if a given object implements the StructuredAddress interface.
 */
export function instanceOfStructuredAddress(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StructuredAddressFromJSON(json: any): StructuredAddress {
    return StructuredAddressFromJSONTyped(json, false);
}

export function StructuredAddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): StructuredAddress {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'region': !exists(json, 'region') ? undefined : AddressObjectFromJSON(json['region']),
        'district': !exists(json, 'district') ? undefined : AddressObjectFromJSON(json['district']),
        'citySettlement': !exists(json, 'city_settlement') ? undefined : AddressObjectFromJSON(json['city_settlement']),
        'city': !exists(json, 'city') ? undefined : AddressObjectFromJSON(json['city']),
        'settlement': !exists(json, 'settlement') ? undefined : AddressObjectFromJSON(json['settlement']),
        'street': !exists(json, 'street') ? undefined : AddressObjectFromJSON(json['street']),
        'planningStructure': !exists(json, 'planning_structure') ? undefined : AddressObjectFromJSON(json['planning_structure']),
        'house': !exists(json, 'house') ? undefined : EstateObjectFromJSON(json['house']),
        'building': !exists(json, 'building') ? undefined : EstateObjectFromJSON(json['building']),
        'flat': !exists(json, 'flat') ? undefined : EstateObjectFromJSON(json['flat']),
        'postalCode': !exists(json, 'postal_code') ? undefined : json['postal_code'],
        'kladrCode': !exists(json, 'kladr_code') ? undefined : json['kladr_code'],
        'objectLevelId': !exists(json, 'object_level_id') ? undefined : AddressLevelFromJSON(json['object_level_id']),
    };
}

export function StructuredAddressToJSON(value?: StructuredAddress | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'region': AddressObjectToJSON(value.region),
        'district': AddressObjectToJSON(value.district),
        'city_settlement': AddressObjectToJSON(value.citySettlement),
        'city': AddressObjectToJSON(value.city),
        'settlement': AddressObjectToJSON(value.settlement),
        'street': AddressObjectToJSON(value.street),
        'planning_structure': AddressObjectToJSON(value.planningStructure),
        'house': EstateObjectToJSON(value.house),
        'building': EstateObjectToJSON(value.building),
        'flat': EstateObjectToJSON(value.flat),
        'postal_code': value.postalCode,
        'kladr_code': value.kladrCode,
        'object_level_id': AddressLevelToJSON(value.objectLevelId),
    };
}

