/* tslint:disable */
/* eslint-disable */
/**
 * SPAS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ConvertionResultRecord } from './ConvertionResultRecord';
import {
    ConvertionResultRecordFromJSON,
    ConvertionResultRecordFromJSONTyped,
    ConvertionResultRecordToJSON,
} from './ConvertionResultRecord';

/**
 * Блок идентификаторов адресных элементов
 * @export
 * @interface ConvertionResultBlockResult
 */
export interface ConvertionResultBlockResult {
    /**
     * Блок результатов
     * @type {Array<ConvertionResultRecord>}
     * @memberof ConvertionResultBlockResult
     */
    block?: Array<ConvertionResultRecord> | null;
}

/**
 * Check if a given object implements the ConvertionResultBlockResult interface.
 */
export function instanceOfConvertionResultBlockResult(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConvertionResultBlockResultFromJSON(json: any): ConvertionResultBlockResult {
    return ConvertionResultBlockResultFromJSONTyped(json, false);
}

export function ConvertionResultBlockResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConvertionResultBlockResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'block': !exists(json, 'block') ? undefined : (json['block'] === null ? null : (json['block'] as Array<any>).map(ConvertionResultRecordFromJSON)),
    };
}

export function ConvertionResultBlockResultToJSON(value?: ConvertionResultBlockResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'block': value.block === undefined ? undefined : (value.block === null ? null : (value.block as Array<any>).map(ConvertionResultRecordToJSON)),
    };
}

