/* tslint:disable */
/* eslint-disable */
/**
 * SPAS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AddressLevel } from './AddressLevel';
import {
    AddressLevelFromJSON,
    AddressLevelFromJSONTyped,
    AddressLevelToJSON,
} from './AddressLevel';
import type { AddressType } from './AddressType';
import {
    AddressTypeFromJSON,
    AddressTypeFromJSONTyped,
    AddressTypeToJSON,
} from './AddressType';

/**
 * 
 * @export
 * @interface FilterObject
 */
export interface FilterObject {
    /**
     * 
     * @type {string}
     * @memberof FilterObject
     */
    path?: string | null;
    /**
     * 
     * @type {AddressLevel}
     * @memberof FilterObject
     */
    addressLevel?: AddressLevel;
    /**
     * 
     * @type {Array<AddressLevel>}
     * @memberof FilterObject
     */
    addressLevels?: Array<AddressLevel> | null;
    /**
     * 
     * @type {string}
     * @memberof FilterObject
     */
    namePart?: string | null;
    /**
     * 
     * @type {AddressType}
     * @memberof FilterObject
     */
    addressType?: AddressType;
    /**
     * 
     * @type {boolean}
     * @memberof FilterObject
     */
    includeDescendants?: boolean;
}

/**
 * Check if a given object implements the FilterObject interface.
 */
export function instanceOfFilterObject(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FilterObjectFromJSON(json: any): FilterObject {
    return FilterObjectFromJSONTyped(json, false);
}

export function FilterObjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): FilterObject {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'path': !exists(json, 'path') ? undefined : json['path'],
        'addressLevel': !exists(json, 'address_level') ? undefined : AddressLevelFromJSON(json['address_level']),
        'addressLevels': !exists(json, 'address_levels') ? undefined : (json['address_levels'] === null ? null : (json['address_levels'] as Array<any>).map(AddressLevelFromJSON)),
        'namePart': !exists(json, 'name_part') ? undefined : json['name_part'],
        'addressType': !exists(json, 'address_type') ? undefined : AddressTypeFromJSON(json['address_type']),
        'includeDescendants': !exists(json, 'include_descendants') ? undefined : json['include_descendants'],
    };
}

export function FilterObjectToJSON(value?: FilterObject | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'path': value.path,
        'address_level': AddressLevelToJSON(value.addressLevel),
        'address_levels': value.addressLevels === undefined ? undefined : (value.addressLevels === null ? null : (value.addressLevels as Array<any>).map(AddressLevelToJSON)),
        'name_part': value.namePart,
        'address_type': AddressTypeToJSON(value.addressType),
        'include_descendants': value.includeDescendants,
    };
}

