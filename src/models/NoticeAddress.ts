/* tslint:disable */
/* eslint-disable */
/**
 * SPAS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AddressType } from './AddressType';
import {
    AddressTypeFromJSON,
    AddressTypeFromJSONTyped,
    AddressTypeToJSON,
} from './AddressType';
import type { StructuredAddress } from './StructuredAddress';
import {
    StructuredAddressFromJSON,
    StructuredAddressFromJSONTyped,
    StructuredAddressToJSON,
} from './StructuredAddress';

/**
 * 
 * @export
 * @interface NoticeAddress
 */
export interface NoticeAddress {
    /**
     * 
     * @type {string}
     * @memberof NoticeAddress
     */
    fullName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof NoticeAddress
     */
    oktmo?: string | null;
    /**
     * 
     * @type {string}
     * @memberof NoticeAddress
     */
    regionCode?: string | null;
    /**
     * 
     * @type {string}
     * @memberof NoticeAddress
     */
    cadastralNumber?: string | null;
    /**
     * 
     * @type {AddressType}
     * @memberof NoticeAddress
     */
    addressType?: AddressType;
    /**
     * 
     * @type {StructuredAddress}
     * @memberof NoticeAddress
     */
    address?: StructuredAddress;
}

/**
 * Check if a given object implements the NoticeAddress interface.
 */
export function instanceOfNoticeAddress(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function NoticeAddressFromJSON(json: any): NoticeAddress {
    return NoticeAddressFromJSONTyped(json, false);
}

export function NoticeAddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): NoticeAddress {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fullName': !exists(json, 'full_name') ? undefined : json['full_name'],
        'oktmo': !exists(json, 'oktmo') ? undefined : json['oktmo'],
        'regionCode': !exists(json, 'region_code') ? undefined : json['region_code'],
        'cadastralNumber': !exists(json, 'cadastral_number') ? undefined : json['cadastral_number'],
        'addressType': !exists(json, 'address_type') ? undefined : AddressTypeFromJSON(json['address_type']),
        'address': !exists(json, 'address') ? undefined : StructuredAddressFromJSON(json['address']),
    };
}

export function NoticeAddressToJSON(value?: NoticeAddress | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'full_name': value.fullName,
        'oktmo': value.oktmo,
        'region_code': value.regionCode,
        'cadastral_number': value.cadastralNumber,
        'address_type': AddressTypeToJSON(value.addressType),
        'address': StructuredAddressToJSON(value.address),
    };
}

