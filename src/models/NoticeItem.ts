/* tslint:disable */
/* eslint-disable */
/**
 * SPAS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Notice } from './Notice';
import {
    NoticeFromJSON,
    NoticeFromJSONTyped,
    NoticeToJSON,
} from './Notice';

/**
 * 
 * @export
 * @interface NoticeItem
 */
export interface NoticeItem {
    /**
     * 
     * @type {number}
     * @memberof NoticeItem
     */
    noticeId?: number;
    /**
     * 
     * @type {number}
     * @memberof NoticeItem
     */
    status?: number;
    /**
     * 
     * @type {Date}
     * @memberof NoticeItem
     */
    statusDate?: Date;
    /**
     * 
     * @type {Notice}
     * @memberof NoticeItem
     */
    notice?: Notice;
}

/**
 * Check if a given object implements the NoticeItem interface.
 */
export function instanceOfNoticeItem(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function NoticeItemFromJSON(json: any): NoticeItem {
    return NoticeItemFromJSONTyped(json, false);
}

export function NoticeItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): NoticeItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'noticeId': !exists(json, 'notice_id') ? undefined : json['notice_id'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'statusDate': !exists(json, 'status_date') ? undefined : (new Date(json['status_date'])),
        'notice': !exists(json, 'notice') ? undefined : NoticeFromJSON(json['notice']),
    };
}

export function NoticeItemToJSON(value?: NoticeItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'notice_id': value.noticeId,
        'status': value.status,
        'status_date': value.statusDate === undefined ? undefined : (value.statusDate.toISOString()),
        'notice': NoticeToJSON(value.notice),
    };
}

