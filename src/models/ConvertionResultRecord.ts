/* tslint:disable */
/* eslint-disable */
/**
 * SPAS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ConvertionRecord } from './ConvertionRecord';
import {
    ConvertionRecordFromJSON,
    ConvertionRecordFromJSONTyped,
    ConvertionRecordToJSON,
} from './ConvertionRecord';

/**
 * 
 * @export
 * @interface ConvertionResultRecord
 */
export interface ConvertionResultRecord {
    /**
     * 
     * @type {ConvertionRecord}
     * @memberof ConvertionResultRecord
     */
    source?: ConvertionRecord;
    /**
     * 
     * @type {number}
     * @memberof ConvertionResultRecord
     */
    objectId?: number | null;
    /**
     * 
     * @type {string}
     * @memberof ConvertionResultRecord
     */
    objectGuid?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ConvertionResultRecord
     */
    fullName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ConvertionResultRecord
     */
    error?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ConvertionResultRecord
     */
    description?: string | null;
}

/**
 * Check if a given object implements the ConvertionResultRecord interface.
 */
export function instanceOfConvertionResultRecord(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConvertionResultRecordFromJSON(json: any): ConvertionResultRecord {
    return ConvertionResultRecordFromJSONTyped(json, false);
}

export function ConvertionResultRecordFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConvertionResultRecord {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'source': !exists(json, 'source') ? undefined : ConvertionRecordFromJSON(json['source']),
        'objectId': !exists(json, 'object_id') ? undefined : json['object_id'],
        'objectGuid': !exists(json, 'object_guid') ? undefined : json['object_guid'],
        'fullName': !exists(json, 'full_name') ? undefined : json['full_name'],
        'error': !exists(json, 'error') ? undefined : json['error'],
        'description': !exists(json, 'description') ? undefined : json['description'],
    };
}

export function ConvertionResultRecordToJSON(value?: ConvertionResultRecord | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'source': ConvertionRecordToJSON(value.source),
        'object_id': value.objectId,
        'object_guid': value.objectGuid,
        'full_name': value.fullName,
        'error': value.error,
        'description': value.description,
    };
}

