/* tslint:disable */
/* eslint-disable */
/**
 * SPAS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AddressType,
  AddressesResult,
  ErrorResult,
  HintResult,
} from '../models/index';
import {
    AddressTypeFromJSON,
    AddressTypeToJSON,
    AddressesResultFromJSON,
    AddressesResultToJSON,
    ErrorResultFromJSON,
    ErrorResultToJSON,
    HintResultFromJSON,
    HintResultToJSON,
} from '../models/index';

export interface ApiSpasV20GetAddressHintGetRequest {
    searchString?: string;
    addressType?: AddressType;
}

export interface ApiSpasV20SearchAddressItemsGetRequest {
    searchString?: string;
    addressType?: AddressType;
}

/**
 * 
 */
export class SearchApi extends runtime.BaseAPI {

    /**
     * Сервис для организации стандартизированного ввода и поиск адреса (унифицированная адресная строка)
     */
    async apiSpasV20GetAddressHintGetRaw(requestParameters: ApiSpasV20GetAddressHintGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HintResult>> {
        const queryParameters: any = {};

        if (requestParameters.searchString !== undefined) {
            queryParameters['search_string'] = requestParameters.searchString;
        }

        if (requestParameters.addressType !== undefined) {
            queryParameters['address_type'] = requestParameters.addressType;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["master-token"] = this.configuration.apiKey("master-token"); // master-token authentication
        }

        const response = await this.request({
            path: `/api/spas/v2.0/GetAddressHint`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => HintResultFromJSON(jsonValue));
    }

    /**
     * Сервис для организации стандартизированного ввода и поиск адреса (унифицированная адресная строка)
     */
    async apiSpasV20GetAddressHintGet(requestParameters: ApiSpasV20GetAddressHintGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HintResult> {
        const response = await this.apiSpasV20GetAddressHintGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Получение адресных элементов, соответствующих заданной произвольной строке адреса
     */
    async apiSpasV20SearchAddressItemsGetRaw(requestParameters: ApiSpasV20SearchAddressItemsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AddressesResult>> {
        const queryParameters: any = {};

        if (requestParameters.searchString !== undefined) {
            queryParameters['search_string'] = requestParameters.searchString;
        }

        if (requestParameters.addressType !== undefined) {
            queryParameters['address_type'] = requestParameters.addressType;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["master-token"] = this.configuration.apiKey("master-token"); // master-token authentication
        }

        const response = await this.request({
            path: `/api/spas/v2.0/SearchAddressItems`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AddressesResultFromJSON(jsonValue));
    }

    /**
     * Получение адресных элементов, соответствующих заданной произвольной строке адреса
     */
    async apiSpasV20SearchAddressItemsGet(requestParameters: ApiSpasV20SearchAddressItemsGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AddressesResult> {
        const response = await this.apiSpasV20SearchAddressItemsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
